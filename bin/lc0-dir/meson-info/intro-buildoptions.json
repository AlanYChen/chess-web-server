[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "array", "description": "List of additional prefixes for cmake to search"}, {"name": "build.pkg_config_path", "value": [], "section": "core", "machine": "any", "type": "array", "description": "List of additional paths for pkg-config to search"}, {"name": "auto_features", "value": "auto", "section": "core", "machine": "any", "choices": ["enabled", "disabled", "auto"], "type": "combo", "description": "Override value of all 'auto' features"}, {"name": "backend", "value": "ninja", "section": "core", "machine": "any", "choices": ["ninja", "vs", "vs2010", "vs2012", "vs2013", "vs2015", "vs2017", "vs2019", "vs2022", "xcode"], "type": "combo", "description": "Backend to use"}, {"name": "buildtype", "value": "release", "section": "core", "machine": "any", "choices": ["plain", "debug", "debugoptimized", "release", "minsize", "custom"], "type": "combo", "description": "Build type to use"}, {"name": "cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "array", "description": "List of additional prefixes for cmake to search"}, {"name": "debug", "value": false, "section": "core", "machine": "any", "type": "boolean", "description": "Enable debug symbols and other information"}, {"name": "default_library", "value": "shared", "section": "core", "machine": "any", "choices": ["shared", "static", "both"], "type": "combo", "description": "Default library type"}, {"name": "force_fallback_for", "value": [], "section": "core", "machine": "any", "type": "array", "description": "Force fallback for those subprojects"}, {"name": "install_umask", "value": 18, "section": "core", "machine": "any", "type": "integer", "description": "Default umask to apply on permissions of installed files"}, {"name": "layout", "value": "mirror", "section": "core", "machine": "any", "choices": ["mirror", "flat"], "type": "combo", "description": "Build directory layout"}, {"name": "optimization", "value": "3", "section": "core", "machine": "any", "choices": ["0", "g", "1", "2", "3", "s"], "type": "combo", "description": "Optimization level"}, {"name": "pkg_config_path", "value": [], "section": "core", "machine": "any", "type": "array", "description": "List of additional paths for pkg-config to search"}, {"name": "strip", "value": false, "section": "core", "machine": "any", "type": "boolean", "description": "Strip targets on install"}, {"name": "unity", "value": "off", "section": "core", "machine": "any", "choices": ["on", "off", "subprojects"], "type": "combo", "description": "Unity build"}, {"name": "unity_size", "value": 4, "section": "core", "machine": "any", "type": "integer", "description": "Unity block size"}, {"name": "warning_level", "value": "3", "section": "core", "machine": "any", "choices": ["0", "1", "2", "3"], "type": "combo", "description": "Compiler warning level to use"}, {"name": "werror", "value": false, "section": "core", "machine": "any", "type": "boolean", "description": "Treat warnings as errors"}, {"name": "wrap_mode", "value": "default", "section": "core", "machine": "any", "choices": ["default", "nofallback", "nodownload", "forcefallback", "nopromote"], "type": "combo", "description": "Wrap mode"}, {"name": "python.platlibdir", "value": "", "section": "core", "machine": "any", "type": "string", "description": "Directory for site-specific, platform-specific files."}, {"name": "python.purelibdir", "value": "", "section": "core", "machine": "any", "type": "string", "description": "Directory for site-specific, non-platform-specific files."}, {"name": "eigen:default_library", "value": "shared", "section": "core", "machine": "any", "choices": ["shared", "static", "both"], "type": "combo", "description": "Default library type"}, {"name": "eigen:warning_level", "value": "3", "section": "core", "machine": "any", "choices": ["0", "1", "2", "3"], "type": "combo", "description": "Compiler warning level to use"}, {"name": "eigen:werror", "value": false, "section": "core", "machine": "any", "type": "boolean", "description": "Treat warnings as errors"}, {"name": "gtest:default_library", "value": "shared", "section": "core", "machine": "any", "choices": ["shared", "static", "both"], "type": "combo", "description": "Default library type"}, {"name": "gtest:warning_level", "value": "3", "section": "core", "machine": "any", "choices": ["0", "1", "2", "3"], "type": "combo", "description": "Compiler warning level to use"}, {"name": "gtest:werror", "value": false, "section": "core", "machine": "any", "type": "boolean", "description": "Treat warnings as errors"}, {"name": "zlib:default_library", "value": "shared", "section": "core", "machine": "any", "choices": ["shared", "static", "both"], "type": "combo", "description": "Default library type"}, {"name": "zlib:warning_level", "value": "3", "section": "core", "machine": "any", "choices": ["0", "1", "2", "3"], "type": "combo", "description": "Compiler warning level to use"}, {"name": "zlib:werror", "value": false, "section": "core", "machine": "any", "type": "boolean", "description": "Treat warnings as errors"}, {"name": "backend_max_links", "value": 0, "section": "backend", "machine": "any", "type": "integer", "description": "Maximum number of linker processes to run or 0 for no limit"}, {"name": "b_asneeded", "value": true, "section": "base", "machine": "any", "type": "boolean", "description": "Use -Wl,--as-needed when linking"}, {"name": "b_colorout", "value": "always", "section": "base", "machine": "any", "choices": ["auto", "always", "never"], "type": "combo", "description": "Use colored output"}, {"name": "b_coverage", "value": false, "section": "base", "machine": "any", "type": "boolean", "description": "Enable coverage tracking."}, {"name": "b_lto", "value": true, "section": "base", "machine": "any", "type": "boolean", "description": "Use link time optimization"}, {"name": "b_lto_threads", "value": 0, "section": "base", "machine": "any", "type": "integer", "description": "Use multiple threads for Link Time Optimization"}, {"name": "b_lundef", "value": true, "section": "base", "machine": "any", "type": "boolean", "description": "Use -Wl,--no-undefined when linking"}, {"name": "b_ndebug", "value": "if-release", "section": "base", "machine": "any", "choices": ["true", "false", "if-release"], "type": "combo", "description": "Disable asserts"}, {"name": "b_pch", "value": true, "section": "base", "machine": "any", "type": "boolean", "description": "Use precompiled headers"}, {"name": "b_pgo", "value": "off", "section": "base", "machine": "any", "choices": ["off", "generate", "use"], "type": "combo", "description": "Use profile guided optimization"}, {"name": "b_pie", "value": false, "section": "base", "machine": "any", "type": "boolean", "description": "Build executables as position independent"}, {"name": "b_sanitize", "value": "none", "section": "base", "machine": "any", "choices": ["none", "address", "thread", "undefined", "memory", "address,undefined"], "type": "combo", "description": "Code sanitizer to use"}, {"name": "b_staticpic", "value": true, "section": "base", "machine": "any", "type": "boolean", "description": "Build static libraries as position independent"}, {"name": "build.c_args", "value": [], "section": "compiler", "machine": "build", "type": "array", "description": "Extra arguments passed to the c compiler"}, {"name": "build.c_link_args", "value": [], "section": "compiler", "machine": "build", "type": "array", "description": "Extra arguments passed to the c linker"}, {"name": "build.c_std", "value": "none", "section": "compiler", "machine": "build", "choices": ["none", "c89", "c99", "c11", "gnu89", "gnu99", "gnu11"], "type": "combo", "description": "C language standard to use"}, {"name": "c_args", "value": [], "section": "compiler", "machine": "host", "type": "array", "description": "Extra arguments passed to the c compiler"}, {"name": "c_link_args", "value": [], "section": "compiler", "machine": "host", "type": "array", "description": "Extra arguments passed to the c linker"}, {"name": "c_std", "value": "none", "section": "compiler", "machine": "host", "choices": ["none", "c89", "c99", "c11", "gnu89", "gnu99", "gnu11"], "type": "combo", "description": "C language standard to use"}, {"name": "build.cpp_args", "value": [], "section": "compiler", "machine": "build", "type": "array", "description": "Extra arguments passed to the cpp compiler"}, {"name": "build.cpp_debugstl", "value": false, "section": "compiler", "machine": "build", "type": "boolean", "description": "STL debug mode"}, {"name": "build.cpp_eh", "value": "default", "section": "compiler", "machine": "build", "choices": ["none", "default", "a", "s", "sc"], "type": "combo", "description": "C++ exception handling type."}, {"name": "build.cpp_link_args", "value": [], "section": "compiler", "machine": "build", "type": "array", "description": "Extra arguments passed to the cpp linker"}, {"name": "build.cpp_rtti", "value": true, "section": "compiler", "machine": "build", "type": "boolean", "description": "Enable RTTI"}, {"name": "build.cpp_std", "value": "c++17", "section": "compiler", "machine": "build", "choices": ["none", "c++98", "c++03", "c++11", "c++14", "c++17", "c++1z", "c++2a", "c++20", "gnu++03", "gnu++11", "gnu++14", "gnu++17", "gnu++1z", "gnu++2a", "gnu++20"], "type": "combo", "description": "C++ language standard to use"}, {"name": "cpp_args", "value": [], "section": "compiler", "machine": "host", "type": "array", "description": "Extra arguments passed to the cpp compiler"}, {"name": "cpp_debugstl", "value": false, "section": "compiler", "machine": "host", "type": "boolean", "description": "STL debug mode"}, {"name": "cpp_eh", "value": "default", "section": "compiler", "machine": "host", "choices": ["none", "default", "a", "s", "sc"], "type": "combo", "description": "C++ exception handling type."}, {"name": "cpp_link_args", "value": [], "section": "compiler", "machine": "host", "type": "array", "description": "Extra arguments passed to the cpp linker"}, {"name": "cpp_rtti", "value": true, "section": "compiler", "machine": "host", "type": "boolean", "description": "Enable RTTI"}, {"name": "cpp_std", "value": "c++17", "section": "compiler", "machine": "host", "choices": ["none", "c++98", "c++03", "c++11", "c++14", "c++17", "c++1z", "c++2a", "c++20", "gnu++03", "gnu++11", "gnu++14", "gnu++17", "gnu++1z", "gnu++2a", "gnu++20"], "type": "combo", "description": "C++ language standard to use"}, {"name": "bindir", "value": "bin", "section": "directory", "machine": "any", "type": "string", "description": "Executable directory"}, {"name": "datadir", "value": "share", "section": "directory", "machine": "any", "type": "string", "description": "Data file directory"}, {"name": "includedir", "value": "include", "section": "directory", "machine": "any", "type": "string", "description": "Header file directory"}, {"name": "infodir", "value": "share/info", "section": "directory", "machine": "any", "type": "string", "description": "Info page directory"}, {"name": "libdir", "value": "lib/x86_64-linux-gnu", "section": "directory", "machine": "any", "type": "string", "description": "Library directory"}, {"name": "libexecdir", "value": "libexec", "section": "directory", "machine": "any", "type": "string", "description": "Library executable directory"}, {"name": "localedir", "value": "share/locale", "section": "directory", "machine": "any", "type": "string", "description": "Locale data directory"}, {"name": "localstatedir", "value": "/var/local", "section": "directory", "machine": "any", "type": "string", "description": "Localstate data directory"}, {"name": "mandir", "value": "share/man", "section": "directory", "machine": "any", "type": "string", "description": "Manual page directory"}, {"name": "prefix", "value": "/usr/local", "section": "directory", "machine": "any", "type": "string", "description": "Installation prefix"}, {"name": "sbindir", "value": "sbin", "section": "directory", "machine": "any", "type": "string", "description": "System executable directory"}, {"name": "sharedstatedir", "value": "/var/local/lib", "section": "directory", "machine": "any", "type": "string", "description": "Architecture-independent data directory"}, {"name": "sysconfdir", "value": "etc", "section": "directory", "machine": "any", "type": "string", "description": "Sysconf data directory"}, {"name": "accelerate", "value": true, "section": "user", "machine": "any", "type": "boolean", "description": "Enable Accelerate BLAS support"}, {"name": "blas", "value": true, "section": "user", "machine": "any", "type": "boolean", "description": "Enable BLAS backend"}, {"name": "build_backends", "value": true, "section": "user", "machine": "any", "type": "boolean", "description": "Build backends for NN computation"}, {"name": "cc_cuda", "value": "", "section": "user", "machine": "any", "type": "string", "description": "Build for a specific cuda CC, e.g. -Dcc_cuda=35 for CC 3.5"}, {"name": "cudnn", "value": true, "section": "user", "machine": "any", "type": "boolean", "description": "Enable cuDNN backend"}, {"name": "cudnn_include", "value": ["/opt/cuda/include/", "/usr/local/cuda/include/", "/usr/lib/cuda/include/"], "section": "user", "machine": "any", "type": "array", "description": "Paths to cudnn include directory"}, {"name": "cudnn_libdirs", "value": ["/opt/cuda/lib64/", "/usr/local/cuda/lib64/", "/usr/lib/cuda/lib64/"], "section": "user", "machine": "any", "type": "array", "description": "Paths to Cuda/cudnn libraries"}, {"name": "dnnl", "value": false, "section": "user", "machine": "any", "type": "boolean", "description": "Enable DNNL BLAS support"}, {"name": "dnnl_dir", "value": "/usr", "section": "user", "machine": "any", "type": "string", "description": "Paths to DNNL install directory"}, {"name": "dx", "value": true, "section": "user", "machine": "any", "type": "boolean", "description": "Enable DirectX12 backend"}, {"name": "embed", "value": false, "section": "user", "machine": "any", "type": "boolean", "description": "Use embedded net by default"}, {"name": "gtest", "value": true, "section": "user", "machine": "any", "type": "boolean", "description": "Build gtest tests"}, {"name": "ispc", "value": true, "section": "user", "machine": "any", "type": "boolean", "description": "use ispc"}, {"name": "ispc_native_only", "value": true, "section": "user", "machine": "any", "type": "boolean", "description": "use ispc and enable native arch only"}, {"name": "malloc", "value": "", "section": "user", "machine": "any", "type": "string", "description": "Use alternative memory allocator, e.g. tcmalloc/jemalloc"}, {"name": "mimalloc_libdir", "value": "", "section": "user", "machine": "any", "type": "string", "description": "Library directory for malloc=mimalloc"}, {"name": "mkl", "value": true, "section": "user", "machine": "any", "type": "boolean", "description": "Enable MKL BLAS support"}, {"name": "mkl_include", "value": ["/opt/intel/mkl/include"], "section": "user", "machine": "any", "type": "array", "description": "Paths to MKL libraries"}, {"name": "mkl_libdirs", "value": ["/opt/intel/lib/intel64", "/opt/intel/mkl/lib/intel64", "/opt/intel/mkl/lib"], "section": "user", "machine": "any", "type": "array", "description": "Paths to MKL libraries"}, {"name": "neon", "value": true, "section": "user", "machine": "any", "type": "boolean", "description": "Use neon instructions on arm processors"}, {"name": "nvcc_ccbin", "value": "", "section": "user", "machine": "any", "type": "string", "description": "Override C++ compiler used by cuda nvcc"}, {"name": "onednn", "value": false, "section": "user", "machine": "any", "type": "boolean", "description": "Enable oneDNN backend"}, {"name": "onnx_include", "value": "", "section": "user", "machine": "any", "type": "string", "description": "Paths to ONNX runtime includes"}, {"name": "onnx_libdir", "value": "", "section": "user", "machine": "any", "type": "string", "description": "Paths to ONNX runtime libraries"}, {"name": "openblas", "value": true, "section": "user", "machine": "any", "type": "boolean", "description": "Enable OpenBLAS support"}, {"name": "openblas_include", "value": ["/usr/include/openblas/"], "section": "user", "machine": "any", "type": "array", "description": "Paths to openblas include directories"}, {"name": "openblas_libdirs", "value": ["/usr/lib/"], "section": "user", "machine": "any", "type": "array", "description": "Paths to OpenBLAS libraries"}, {"name": "opencl", "value": true, "section": "user", "machine": "any", "type": "boolean", "description": "Enable OpenCL backend"}, {"name": "opencl_include", "value": "/usr/include/", "section": "user", "machine": "any", "type": "string", "description": "Path to OpenCL include directory"}, {"name": "opencl_libdirs", "value": ["/opt/cuda/lib64/", "/usr/local/cuda/lib64/"], "section": "user", "machine": "any", "type": "array", "description": "Paths to OpenCL libraries"}, {"name": "pext", "value": false, "section": "user", "machine": "any", "type": "boolean", "description": "Use the pext instruction"}, {"name": "plain_cuda", "value": true, "section": "user", "machine": "any", "type": "boolean", "description": "Enable CUDA backend"}, {"name": "popcnt", "value": true, "section": "user", "machine": "any", "type": "boolean", "description": "Use the popcnt instruction"}, {"name": "python_bindings", "value": false, "section": "user", "machine": "any", "type": "boolean", "description": "Build Python bindings for the python to bind."}, {"name": "tensorflow", "value": false, "section": "user", "machine": "any", "type": "boolean", "description": "Enable TensorFlow backend"}, {"name": "zlib:solo", "value": false, "section": "user", "machine": "any", "type": "boolean", "description": "Build a minimal zlib without file I/O API"}, {"name": "errorlogs", "value": true, "section": "test", "machine": "any", "type": "boolean", "description": "Whether to print the logs from failing tests"}, {"name": "stdsplit", "value": true, "section": "test", "machine": "any", "type": "boolean", "description": "Split stdout and stderr in test logs"}]